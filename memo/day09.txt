프론트엔드 9일차 목차

0. 블록 vs 인라인
1. CSS 테이블 디자인
2. CSS 폼 디자인
3. 로그인 화면 디자인

----------------------------------------------------------------------------------------
block vs inline
	block
		<div> <p>가 대표적인 블록을 기본 속성으로 하는 태그이다.
		콘텐츠 또는 텍스트 등과 관련없이 화면의 너비(줄) 만큼 차지한다.
	inline
		<span>이 대표적인 인라인을 기본 속성으로 하는 태그이다.
		콘텐츠 또는 텍스트 등의 크기 만큼만 박스의 너비를 차지한다.
	inline-block
		inline 속성을 기본으로 하지만 block의 속성도 일부 가진다.
		inline에서 적용 불가한 width/height/margin 등을 적용할 수 있다.

block 특징
	margin, padding 모두 적용 가능하다.
	height, width 모두 적용 가능하다.
	단, width, margin의 경우 좌/우측은 block의 특성 상 태그가 너비 전체를 차지하므로
	특수한 경우를 제외하고는 의미가 없을 수 있다.

inline 특징
	padding 모두 적용 가능하다.
	margin은 좌/우만 적용 가능하다.
	width, height 모두 적용 불가능하다.

inline-block 특징
	width, height 모두 적용 가능하다.
	margin, padding 모두 적용 가능하다.

** 일반적으로 inline은 자주 사용되지 않으며, block과 inline-block이 자주 사용된다.
또한, block는 줄(너비) 전체를 차지하는 레이아웃(상위 그룹) 개념으로 주로 사용되고,
inline-block는 줄 안에서 각각의 요소(박스)를 상하/좌우 배치할 경우 주로 사용된다.

<div> vs <span>

<div>		블록(block) 속성이 기본인 레이아웃
		블록 요소는 페이지 너비를 모두 영역으로 자치한다.
		기본적으로 모든 태그를 하위 요소로 포함할 수 있다.

<span>	인라인(inline) 속성이 기본인 레이아웃
		인라인 요소는 콘텐츠의 길이 만큼만 영역을 차지한다.
		기본적으로 태그의 길이가 span 보다 큰 블록 요소 태그들인
		<div>, <p> 등의 개념(의미) 상 포함하지 않는다.

** 물론 위와 같은 기본 속성을 css의 display: inline, block 등으로 변경하면 
위와 같은 특징들을 모두 무시할 수 있지만, 기본적인 태그 요소의 속성을
지키며 부모/자식 관계를 생각하여 레이아웃을 구성하는 것이 좋다.