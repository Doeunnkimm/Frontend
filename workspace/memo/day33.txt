프론트엔드 33일차 목차

1. render, props/state
2. 이벤트 핸들러
3. 라우터(Router)

-----------------------------------------------------------

리액트는 컴포넌로 구성되며, 하나의 컴포넌트는 부모로부터 전달된 props를 바탕으로
DOM을 렌더링하기 위해 element들을 조합하여 render한다.
또한 컴포넌트는 필요에 따라 값을 내부적으로 변경하기 위해 state를 갖는다.

render
	이렇게 컴포넌트에서 엘리먼트를 만들고 이를 호스트(DOM)에 반영하여
	그리도록 하는 것이 render가 하는 역할이다.

	render() { <div>카운트: {this.state.count}></div>

props
	properties의 줄임말로 상위 컴포넌트가 하위 컴포넌트에 값을 전달하기 위한 방법으로
	단방향 데이터 흐름이다.
	이 프로퍼티는 하위 컴포넌트 즉, 전달 받은 컴포넌트에서 수정이 불가하다.


	<Day02A2 title="2일차 수업" name="홍길동" />

state
	props는 외부에서 전달되는 값으로 변경이 불가능한 특징을 갖는다.
	하지만 state는 내부에서 값을 스스로 변경해야 할 경우 상태 관리를 위한 것이다.
	일반적으로 이벤트와 함께 사용하여 값을 저장/변경할 때 사용한다.

	this.state = { count: 0 }	초기 생성시
	this.setState({ count: 1 })	업데이트 시
	var data = this.state		사용 시

요점 정리
	render	컴포넌트 엘리먼들을 브라우저 화면에 표시하는 기능
	props		컴포넌트 외부에서 전달된 값
	state		컵포넌트 내부에서 데이터 상태 관리를 위한 값

이벤트(evnet)
	리액트의 이벤트는 웹 브라우저의 HTML 이벤트와 동일한 기능을 한다.
	또한, HTML 이벤트와 인터페이스가 동일하여 시용법 또한 비슷하다.

이벤트 핸들러(Event Handler)
	HTML 또는 자바스크립트에서 이벤트 처리를 위해 사용하는 핸들러와
	마찬가지로 리액트에서 이벤트를 사용하기 위해 프로그래밍하는 방법 또는 함수

이벤트 사용시 주의사항
	이벤트 이름은 카멜 표기법으로 하는 것을 추천
		onclick -> onClick		// 첫글자는 소문자 단어 시작은 대문자

	이벤트 에는 함수 형태의 값을 전달한다.
		onClick={ onClickButton }	// 뒤에는 내가 만든 함수를 넣음. 함수 방식
		onClick={ () => count+1 }	// 인라인 방식

		const onClickButton = () => { count + 1 }

	일반적으로 한줄에 가능한 간결한 문장은 인라인으로
	여러 줄 또는 긴 문장은 함수 전달 방식으로 작성

기본적인 이벤트
	onClick		버튼/링크 등 태그가 클릭되면 호출되는 이벤트
				클릭하게 되면 내가 정의한 함수가 호출되게 됨
	onChange		입력 태그에서 문자 등의 값이 변경되면 호출되는 이벤트
	onKeyPress		화면 또는 박스 등에서 키보드의 키가 눌러지면 호출되는 이벤트

















