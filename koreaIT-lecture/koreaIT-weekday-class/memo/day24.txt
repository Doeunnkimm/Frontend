프론트엔드 24일차 목차

1. 배열
2. 함수

---------------------------------------------------------------------
배열
	하위의 값만 저장하는 변수를 확장하여 여러 개의 저장 공간을 만드는 방법
	자바스크립트에서는 배열을 객체를 이용해 배열을 만드는 컬렉션 자료구조이다.

배열 선언
	var arr = new Array();	// 배열 생성
	var arr = [];		// 배열 생성

배열 선언과 동시 초기화
	var fruits = new Array("사과", "배", "오렌지");
	var fruits = ["사과", "배", "오렌지"];

	var arr = ["안녕", 1, true, 3.14];

배열 요소값 변경
	// // fruits에는 ["사과", "배", "오렌지"]
	fruits[1] = "레몬";		// ["사과", "레몬", "오렌지"]
	fruits[0] = "애플";		// ["애플", "레몬", "오렌지"]	
	fruits[3-1] = "파인애플"	// ["애플", "레몬", "파인애플"]

배열의 길이 알아내기
	.length를 통해 현재 배열의 길이를 알 수 있다.

	console.log(fruits.length)

배열의 기본 사용(메소드)
	push()			// 배열의 가장 끝에 값을 추가(집어넣기)
	pop()				// 배열의 가장 끝에 값을 삭제(빼오기)
	unshift()			// 배열의 가장 앞에 값을 추가
	shift				// 배열의 가장 앞의 값을 삭제
	slice()			// 배열에서 원하는 인덱스의 값에서부터 복사
	splice()			// 배열에서 원하는 인덱스의 값을 삽입 또는 삭제
	concat()			// 두 개의 배열을 연결(배열 합치기)

	indexOf()			// 배열 요소 인덱스 가져오기
	lastIndexOf()		// 배열 요소 인덱스를 마지막에서부터 가져오기
	includes()			// 배열에 요소가 존재하는지 확인

	arr[arr.length - 1]	// 마지막 요소 가져오기(읽기)

함수(function)
	어떤 기능을 하는 코드들을 재사용하기 위해 한곳에 모아 처리하는 것
	매개변수라는 입력값을 받아 무언가 처리하고 출력값을 리턴한다.

함수 생성 및 사용
	function statement 함수 선언문

	function 함수명(매개변수) {
		실행 할 코드
	}
	
	// 기본 기능 함수
	function print() {
		console.log("안녕하세요. 홍길동입니다.");
	}

	// 함수 사용
	print();

	// 입력 받은 값으로 출력
	function printName(name) {
		console.log("제 이름은 " + name + "입니다.");
	}

	// 함수 사용
	printName("김유신");

	printName("홍길동");

함수의 특징
	함수는 function 키워드로 시작하고, 실제로는 객체이다.
	함수는 정의/생성할 수 있으며, 출력할 수도 있다.
	객체의 특성 덕분에 함수를 변수나 배열에 배정할 수 있다.
	다른 함수를 호출할 때, 인자를 넘겨줄 수 있다.

소스코드 평가
	코드를 위에서부터 아래로 미리 읽어 코드 실행 전에 선언된 변수 및 함수 등을 미리 해석
	'아! var로 선언된 변수네?, 아! 함수 선언문이네? 어, 전역 등록이네...'


